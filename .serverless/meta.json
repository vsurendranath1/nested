{
  "F:\\aws-123\\serverless.yml": {
    "versionFramework": "4.9.1",
    "servicePath": "F:\\aws-123\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "surendra123",
      "app": "nestedstacks",
      "service": "stack1-dev",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "stackName": "stack1-dev",
        "memorySize": 128,
        "timeout": 10,
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "Function1LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function1"
              }
            },
            "Function2LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function2"
              }
            },
            "Function3LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function3"
              }
            },
            "Function4LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function4"
              }
            },
            "Function5LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function5"
              }
            },
            "Function6LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function6"
              }
            },
            "Function7LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function7"
              }
            },
            "Function8LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function8"
              }
            },
            "Function9LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/stack1-dev-dev-function9"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "stack1-dev",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stack1-dev-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stack1-dev-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "lambda:InvokeFunction"
                          ],
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "stack1-dev",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "Function1LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function1",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function1",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function1LogGroup"
              ]
            },
            "Function2LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function2",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function2",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function2LogGroup"
              ]
            },
            "Function3LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function3",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function3",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function3LogGroup"
              ]
            },
            "Function4LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function4",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function4",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function4LogGroup"
              ]
            },
            "Function5LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function5",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function5",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function5LogGroup"
              ]
            },
            "Function6LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function6",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function6",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function6LogGroup"
              ]
            },
            "Function7LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function7",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function7",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function7LogGroup"
              ]
            },
            "Function8LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function8",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function8",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function8LogGroup"
              ]
            },
            "Function9LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                  "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
                },
                "Handler": "handler.function9",
                "Runtime": "nodejs18.x",
                "FunctionName": "stack1-dev-dev-function9",
                "MemorySize": 128,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "Function9LogGroup"
              ]
            },
            "Function1LambdaVersionYkvsm7CEvFI1HoLC8su7jYKKeU7OnyX8EY9StTmdk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function1LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function2LambdaVersion3PgCnLDOCrNtHciSaiMjvrdsTHsE8RoXiknw23C0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function2LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function3LambdaVersionNWlR83JL1vRFc5ls8VCtyMBI4vBSt6zUereEi9iMKwk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function3LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function4LambdaVersion7sVYOandKPaaDRIKrXWH318HffarZYEZtyBXuvmEeUo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function4LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function5LambdaVersionQA7iQ6d5LFkvqDJ1KHNJQegVMKFISOsarfAzE8oUMc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function5LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function6LambdaVersion6f0eU4zb4OAI8eDO52LgoAWIDw7ZuPXWybo6Fw8VZNk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function6LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function7LambdaVersionPnoQORPZFlbqqkiUj46T4UTc1D8HaDOP2nByAIIdRE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function7LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function8LambdaVersionxccTWJzSxRzjxdHIyDOYFLoZZGl6Qd5NU8UlqDjoEM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function8LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "Function9LambdaVersionySgP11m4zPdMJK85aJK9snlHc5FmPE0mAfSBQZu6vdE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "Function9LambdaFunction"
                },
                "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-stack1-dev",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceFunction1": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function1",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction2": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function2",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction3": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function3",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction4": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function4",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction5": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function5",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction6": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function6",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction7": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function7",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction8": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function8",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFunction9": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "function9",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFunction1Get": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction1"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function1LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function1LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction2Post": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction2"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function2LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function2LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction3Get": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction3"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function3LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function3LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction4Post": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction4"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function4LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function4LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction5Get": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction5"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function5LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function5LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction6Post": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction6"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function6LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function6LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction7Get": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction7"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function7LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function7LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction8Post": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction8"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function8LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function8LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFunction9Get": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFunction9"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Function9LambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "Function9LambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1743423915334": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodFunction1Get",
                "ApiGatewayMethodFunction2Post",
                "ApiGatewayMethodFunction3Get",
                "ApiGatewayMethodFunction4Post",
                "ApiGatewayMethodFunction5Get",
                "ApiGatewayMethodFunction6Post",
                "ApiGatewayMethodFunction7Get",
                "ApiGatewayMethodFunction8Post",
                "ApiGatewayMethodFunction9Get"
              ]
            },
            "Function1LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function1LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function2LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function2LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function3LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function3LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function4LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function4LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function5LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function5LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function6LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function6LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function7LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function7LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function8LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function8LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "Function9LambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "Function9LambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "Export": {
                "Name": "sls-stack1-dev-dev-ServerlessDeploymentBucketName"
              }
            },
            "Function1LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function1LambdaVersionYkvsm7CEvFI1HoLC8su7jYKKeU7OnyX8EY9StTmdk"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function1LambdaFunctionQualifiedArn"
              }
            },
            "Function2LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function2LambdaVersion3PgCnLDOCrNtHciSaiMjvrdsTHsE8RoXiknw23C0"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function2LambdaFunctionQualifiedArn"
              }
            },
            "Function3LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function3LambdaVersionNWlR83JL1vRFc5ls8VCtyMBI4vBSt6zUereEi9iMKwk"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function3LambdaFunctionQualifiedArn"
              }
            },
            "Function4LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function4LambdaVersion7sVYOandKPaaDRIKrXWH318HffarZYEZtyBXuvmEeUo"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function4LambdaFunctionQualifiedArn"
              }
            },
            "Function5LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function5LambdaVersionQA7iQ6d5LFkvqDJ1KHNJQegVMKFISOsarfAzE8oUMc"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function5LambdaFunctionQualifiedArn"
              }
            },
            "Function6LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function6LambdaVersion6f0eU4zb4OAI8eDO52LgoAWIDw7ZuPXWybo6Fw8VZNk"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function6LambdaFunctionQualifiedArn"
              }
            },
            "Function7LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function7LambdaVersionPnoQORPZFlbqqkiUj46T4UTc1D8HaDOP2nByAIIdRE"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function7LambdaFunctionQualifiedArn"
              }
            },
            "Function8LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function8LambdaVersionxccTWJzSxRzjxdHIyDOYFLoZZGl6Qd5NU8UlqDjoEM"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function8LambdaFunctionQualifiedArn"
              }
            },
            "Function9LambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "Function9LambdaVersionySgP11m4zPdMJK85aJK9snlHc5FmPE0mAfSBQZu6vdE"
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-Function9LambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-stack1-dev-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-offline"
      ],
      "functions": {
        "function1": {
          "handler": "handler.function1",
          "events": [
            {
              "http": {
                "path": "function1",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function1",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function1LambdaVersionYkvsm7CEvFI1HoLC8su7jYKKeU7OnyX8EY9StTmdk"
        },
        "function2": {
          "handler": "handler.function2",
          "events": [
            {
              "http": {
                "path": "function2",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function2",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function2LambdaVersion3PgCnLDOCrNtHciSaiMjvrdsTHsE8RoXiknw23C0"
        },
        "function3": {
          "handler": "handler.function3",
          "events": [
            {
              "http": {
                "path": "function3",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function3",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function3LambdaVersionNWlR83JL1vRFc5ls8VCtyMBI4vBSt6zUereEi9iMKwk"
        },
        "function4": {
          "handler": "handler.function4",
          "events": [
            {
              "http": {
                "path": "function4",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function4",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function4LambdaVersion7sVYOandKPaaDRIKrXWH318HffarZYEZtyBXuvmEeUo"
        },
        "function5": {
          "handler": "handler.function5",
          "events": [
            {
              "http": {
                "path": "function5",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function5",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function5LambdaVersionQA7iQ6d5LFkvqDJ1KHNJQegVMKFISOsarfAzE8oUMc"
        },
        "function6": {
          "handler": "handler.function6",
          "events": [
            {
              "http": {
                "path": "function6",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function6",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function6LambdaVersion6f0eU4zb4OAI8eDO52LgoAWIDw7ZuPXWybo6Fw8VZNk"
        },
        "function7": {
          "handler": "handler.function7",
          "events": [
            {
              "http": {
                "path": "function7",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function7",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function7LambdaVersionPnoQORPZFlbqqkiUj46T4UTc1D8HaDOP2nByAIIdRE"
        },
        "function8": {
          "handler": "handler.function8",
          "events": [
            {
              "http": {
                "path": "function8",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function8",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function8LambdaVersionxccTWJzSxRzjxdHIyDOYFLoZZGl6Qd5NU8UlqDjoEM"
        },
        "function9": {
          "handler": "handler.function9",
          "events": [
            {
              "http": {
                "path": "function9",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "stack1-dev-dev-function9",
          "package": {},
          "memory": 128,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "Function9LambdaVersionySgP11m4zPdMJK85aJK9snlHc5FmPE0mAfSBQZu6vdE"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stackName": "stack1-dev",
      "memorySize": 128,
      "timeout": 10,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "lambda:InvokeFunction"
          ],
          "Resource": "*"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "Function1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function1"
            }
          },
          "Function2LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function2"
            }
          },
          "Function3LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function3"
            }
          },
          "Function4LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function4"
            }
          },
          "Function5LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function5"
            }
          },
          "Function6LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function6"
            }
          },
          "Function7LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function7"
            }
          },
          "Function8LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function8"
            }
          },
          "Function9LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/stack1-dev-dev-function9"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "stack1-dev",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stack1-dev-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stack1-dev-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "stack1-dev",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "Function1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function1",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function1",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function1LogGroup"
            ]
          },
          "Function2LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function2",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function2",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function2LogGroup"
            ]
          },
          "Function3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function3",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function3",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function3LogGroup"
            ]
          },
          "Function4LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function4",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function4",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function4LogGroup"
            ]
          },
          "Function5LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function5",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function5",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function5LogGroup"
            ]
          },
          "Function6LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function6",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function6",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function6LogGroup"
            ]
          },
          "Function7LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function7",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function7",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function7LogGroup"
            ]
          },
          "Function8LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function8",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function8",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function8LogGroup"
            ]
          },
          "Function9LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
                "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
              },
              "Handler": "handler.function9",
              "Runtime": "nodejs18.x",
              "FunctionName": "stack1-dev-dev-function9",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Function9LogGroup"
            ]
          },
          "Function1LambdaVersionYkvsm7CEvFI1HoLC8su7jYKKeU7OnyX8EY9StTmdk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function1LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function2LambdaVersion3PgCnLDOCrNtHciSaiMjvrdsTHsE8RoXiknw23C0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function2LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function3LambdaVersionNWlR83JL1vRFc5ls8VCtyMBI4vBSt6zUereEi9iMKwk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function3LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function4LambdaVersion7sVYOandKPaaDRIKrXWH318HffarZYEZtyBXuvmEeUo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function4LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function5LambdaVersionQA7iQ6d5LFkvqDJ1KHNJQegVMKFISOsarfAzE8oUMc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function5LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function6LambdaVersion6f0eU4zb4OAI8eDO52LgoAWIDw7ZuPXWybo6Fw8VZNk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function6LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function7LambdaVersionPnoQORPZFlbqqkiUj46T4UTc1D8HaDOP2nByAIIdRE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function7LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function8LambdaVersionxccTWJzSxRzjxdHIyDOYFLoZZGl6Qd5NU8UlqDjoEM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function8LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "Function9LambdaVersionySgP11m4zPdMJK85aJK9snlHc5FmPE0mAfSBQZu6vdE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Function9LambdaFunction"
              },
              "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-stack1-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceFunction1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function1",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction2": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function2",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction3": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function3",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction4": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function4",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction5": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function5",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction6": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function6",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction7": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function7",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction8": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function8",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFunction9": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "function9",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFunction1Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction1"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function1LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function1LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction2Post": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction2"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function2LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function2LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction3Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction3"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function3LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function3LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction4Post": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction4"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function4LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function4LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction5Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction5"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function5LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function5LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction6Post": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction6"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function6LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function6LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction7Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction7"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function7LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function7LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction8Post": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction8"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function8LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function8LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFunction9Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFunction9"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Function9LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Function9LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1743423915334": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFunction1Get",
              "ApiGatewayMethodFunction2Post",
              "ApiGatewayMethodFunction3Get",
              "ApiGatewayMethodFunction4Post",
              "ApiGatewayMethodFunction5Get",
              "ApiGatewayMethodFunction6Post",
              "ApiGatewayMethodFunction7Get",
              "ApiGatewayMethodFunction8Post",
              "ApiGatewayMethodFunction9Get"
            ]
          },
          "Function1LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function1LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function2LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function2LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function3LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function3LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function4LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function4LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function5LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function5LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function6LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function6LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function7LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function7LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function8LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function8LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Function9LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Function9LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
            "Export": {
              "Name": "sls-stack1-dev-dev-ServerlessDeploymentBucketName"
            }
          },
          "Function1LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function1LambdaVersionYkvsm7CEvFI1HoLC8su7jYKKeU7OnyX8EY9StTmdk"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function1LambdaFunctionQualifiedArn"
            }
          },
          "Function2LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function2LambdaVersion3PgCnLDOCrNtHciSaiMjvrdsTHsE8RoXiknw23C0"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function2LambdaFunctionQualifiedArn"
            }
          },
          "Function3LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function3LambdaVersionNWlR83JL1vRFc5ls8VCtyMBI4vBSt6zUereEi9iMKwk"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function3LambdaFunctionQualifiedArn"
            }
          },
          "Function4LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function4LambdaVersion7sVYOandKPaaDRIKrXWH318HffarZYEZtyBXuvmEeUo"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function4LambdaFunctionQualifiedArn"
            }
          },
          "Function5LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function5LambdaVersionQA7iQ6d5LFkvqDJ1KHNJQegVMKFISOsarfAzE8oUMc"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function5LambdaFunctionQualifiedArn"
            }
          },
          "Function6LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function6LambdaVersion6f0eU4zb4OAI8eDO52LgoAWIDw7ZuPXWybo6Fw8VZNk"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function6LambdaFunctionQualifiedArn"
            }
          },
          "Function7LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function7LambdaVersionPnoQORPZFlbqqkiUj46T4UTc1D8HaDOP2nByAIIdRE"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function7LambdaFunctionQualifiedArn"
            }
          },
          "Function8LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function8LambdaVersionxccTWJzSxRzjxdHIyDOYFLoZZGl6Qd5NU8UlqDjoEM"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function8LambdaFunctionQualifiedArn"
            }
          },
          "Function9LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Function9LambdaVersionySgP11m4zPdMJK85aJK9snlHc5FmPE0mAfSBQZu6vdE"
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-Function9LambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-stack1-dev-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "v6ZdwoisbGGaGK9kMP8PVA",
          "awsAccountId": "750770785973",
          "status": "alive"
        }
      ],
      "serviceAppId": "7HnwJH7yT0pf1BS6bR",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>",
        "$source": {
          "CREDENTIALS_CODE": "<REDACTED>"
        }
      },
      "instanceParameters": null
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\r\norg: surendra123\r\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\r\napp: nestedstacks\r\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\r\nservice: stack1-dev\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: us-east-1\r\n  stackName: stack1-dev\r\n  memorySize: 128\r\n  timeout: 10\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - lambda:InvokeFunction\r\n      Resource: \"*\"\r\nplugins:\r\n   - serverless-offline\r\n      \r\nfunctions:\r\n  function1:\r\n    handler: handler.function1\r\n    events:\r\n      - http:\r\n          path: function1\r\n          method: get\r\n  function2:\r\n    handler: handler.function2\r\n    events:\r\n      - http:\r\n          path: function2\r\n          method: post\r\n\r\n  function3:\r\n    handler: handler.function3\r\n    events:\r\n      - http:\r\n          path: function3\r\n          method: get\r\n\r\n  function4:\r\n    handler: handler.function4\r\n    events:\r\n      - http:\r\n          path: function4\r\n          method: post\r\n\r\n  function5:\r\n    handler: handler.function5\r\n    events:\r\n      - http:\r\n          path: function5\r\n          method: get\r\n\r\n  function6:\r\n    handler: handler.function6\r\n    events:\r\n      - http:\r\n          path: function6\r\n          method: post\r\n\r\n  function7:\r\n    handler: handler.function7\r\n    events:\r\n      - http:\r\n          path: function7\r\n          method: get\r\n\r\n  function8:\r\n    handler: handler.function8\r\n    events:\r\n      - http:\r\n          path: function8\r\n          method: post\r\n\r\n  function9:\r\n    handler: handler.function9\r\n    events:\r\n      - http:\r\n          path: function9\r\n          method: get\r\n \r\n \r\n                   \r\n          \r\n  \r\n\r\n\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "da75ea06-b135-4515-b37d-2f2f1e9db8a8",
    "orgName": "surendra123",
    "userId": "WF8Kn58dG01Zf874SN",
    "userName": "surendra123",
    "serviceProviderAwsAccountId": "750770785973",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null,
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "Function1LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function1"
          }
        },
        "Function2LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function2"
          }
        },
        "Function3LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function3"
          }
        },
        "Function4LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function4"
          }
        },
        "Function5LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function5"
          }
        },
        "Function6LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function6"
          }
        },
        "Function7LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function7"
          }
        },
        "Function8LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function8"
          }
        },
        "Function9LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/stack1-dev-dev-function9"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "stack1-dev",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stack1-dev-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/stack1-dev-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "stack1-dev",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "Function1LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function1",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function1",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function1LogGroup"
          ]
        },
        "Function2LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function2",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function2",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function2LogGroup"
          ]
        },
        "Function3LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function3",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function3",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function3LogGroup"
          ]
        },
        "Function4LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function4",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function4",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function4LogGroup"
          ]
        },
        "Function5LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function5",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function5",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function5LogGroup"
          ]
        },
        "Function6LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function6",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function6",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function6LogGroup"
          ]
        },
        "Function7LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function7",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function7",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function7LogGroup"
          ]
        },
        "Function8LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function8",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function8",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function8LogGroup"
          ]
        },
        "Function9LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
              "S3Key": "serverless/stack1-dev/dev/1743423947340-2025-03-31T12:25:47.340Z/stack1-dev.zip"
            },
            "Handler": "handler.function9",
            "Runtime": "nodejs18.x",
            "FunctionName": "stack1-dev-dev-function9",
            "MemorySize": 128,
            "Timeout": 10,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "Function9LogGroup"
          ]
        },
        "Function1LambdaVersionYkvsm7CEvFI1HoLC8su7jYKKeU7OnyX8EY9StTmdk": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function1LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function2LambdaVersion3PgCnLDOCrNtHciSaiMjvrdsTHsE8RoXiknw23C0": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function2LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function3LambdaVersionNWlR83JL1vRFc5ls8VCtyMBI4vBSt6zUereEi9iMKwk": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function3LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function4LambdaVersion7sVYOandKPaaDRIKrXWH318HffarZYEZtyBXuvmEeUo": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function4LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function5LambdaVersionQA7iQ6d5LFkvqDJ1KHNJQegVMKFISOsarfAzE8oUMc": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function5LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function6LambdaVersion6f0eU4zb4OAI8eDO52LgoAWIDw7ZuPXWybo6Fw8VZNk": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function6LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function7LambdaVersionPnoQORPZFlbqqkiUj46T4UTc1D8HaDOP2nByAIIdRE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function7LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function8LambdaVersionxccTWJzSxRzjxdHIyDOYFLoZZGl6Qd5NU8UlqDjoEM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function8LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "Function9LambdaVersionySgP11m4zPdMJK85aJK9snlHc5FmPE0mAfSBQZu6vdE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "Function9LambdaFunction"
            },
            "CodeSha256": "XO7ao49wXgNIfedcnLsMRSr0cun5NaHy2pOBsHva/dA="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-stack1-dev",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceFunction1": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function1",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction2": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function2",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction3": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function3",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction4": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function4",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction5": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function5",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction6": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function6",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction7": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function7",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction8": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function8",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFunction9": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "function9",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFunction1Get": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction1"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function1LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function1LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction2Post": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction2"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function2LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function2LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction3Get": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction3"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function3LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function3LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction4Post": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction4"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function4LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function4LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction5Get": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction5"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function5LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function5LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction6Post": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction6"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function6LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function6LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction7Get": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction7"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function7LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function7LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction8Post": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction8"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function8LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function8LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFunction9Get": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFunction9"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "Function9LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "Function9LambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1743423915334": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodFunction1Get",
            "ApiGatewayMethodFunction2Post",
            "ApiGatewayMethodFunction3Get",
            "ApiGatewayMethodFunction4Post",
            "ApiGatewayMethodFunction5Get",
            "ApiGatewayMethodFunction6Post",
            "ApiGatewayMethodFunction7Get",
            "ApiGatewayMethodFunction8Post",
            "ApiGatewayMethodFunction9Get"
          ]
        },
        "Function1LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function1LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function2LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function2LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function3LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function3LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function4LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function4LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function5LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function5LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function6LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function6LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function7LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function7LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function8LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function8LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "Function9LambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "Function9LambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-47defdbf-75fb",
          "Export": {
            "Name": "sls-stack1-dev-dev-ServerlessDeploymentBucketName"
          }
        },
        "Function1LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function1LambdaVersionYkvsm7CEvFI1HoLC8su7jYKKeU7OnyX8EY9StTmdk"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function1LambdaFunctionQualifiedArn"
          }
        },
        "Function2LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function2LambdaVersion3PgCnLDOCrNtHciSaiMjvrdsTHsE8RoXiknw23C0"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function2LambdaFunctionQualifiedArn"
          }
        },
        "Function3LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function3LambdaVersionNWlR83JL1vRFc5ls8VCtyMBI4vBSt6zUereEi9iMKwk"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function3LambdaFunctionQualifiedArn"
          }
        },
        "Function4LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function4LambdaVersion7sVYOandKPaaDRIKrXWH318HffarZYEZtyBXuvmEeUo"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function4LambdaFunctionQualifiedArn"
          }
        },
        "Function5LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function5LambdaVersionQA7iQ6d5LFkvqDJ1KHNJQegVMKFISOsarfAzE8oUMc"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function5LambdaFunctionQualifiedArn"
          }
        },
        "Function6LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function6LambdaVersion6f0eU4zb4OAI8eDO52LgoAWIDw7ZuPXWybo6Fw8VZNk"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function6LambdaFunctionQualifiedArn"
          }
        },
        "Function7LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function7LambdaVersionPnoQORPZFlbqqkiUj46T4UTc1D8HaDOP2nByAIIdRE"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function7LambdaFunctionQualifiedArn"
          }
        },
        "Function8LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function8LambdaVersionxccTWJzSxRzjxdHIyDOYFLoZZGl6Qd5NU8UlqDjoEM"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function8LambdaFunctionQualifiedArn"
          }
        },
        "Function9LambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "Function9LambdaVersionySgP11m4zPdMJK85aJK9snlHc5FmPE0mAfSBQZu6vdE"
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-Function9LambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-stack1-dev-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}